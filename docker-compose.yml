x-chat: &chat
    environment: &chat-env
        ASPNETCORE_ENVIRONMENT: Development
        Chat__PublicChatId: all
        Chat__ChatCount: 3
        Kafka__BootstrapServers: kafka-chat-1:9092
        Kafka__Topic: chat-topic
    build: &chat-build
        context: .
        dockerfile: Dockerfile.app
    depends_on:
        - kafka-chat-1
        - kafka-chat-2
        - kafka-chat-3
        - postgres

x-kafka: &kafka
    build: &kafka-build
        context: .
        dockerfile: Dockerfile.kafka
        args:
            JMX_JAVAAGENT_VERSION: "${JMX_JAVAAGENT_VERSION}"
    environment: &kafka-env
        HOME: /opt/bitnami/kafka
        KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_ENABLE_KRAFT: "no"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
        zookeeper:
            condition: service_healthy

x-zookeeper: &zookeeper
    image: docker.io/bitnami/zookeeper:${ZK_VERSION}
    volumes:
        - "zookeeper:/bitnami"
    environment:
        ALLOW_ANONYMOUS_LOGIN: "yes"


x-redpanda-console: &redpanda-console
    image: docker.redpanda.com/vectorized/console:v2.1.1
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment: 
        CONFIG_FILEPATH: /tmp/config.yml
        CONSOLE_CONFIG_FILE: |
          kafka:
            brokers: ["kafka-chat-1:9092", "kafka-chat-2:9092", "kafka-chat-3:9092"]
            schemaRegistry:
              enabled: false
              urls: ["http://redpanda-0:8081"]
    ports:
        - 8080:8080
    depends_on:
        - kafka-chat-1

##############################################

services:
    postgres:
        image: postgres:15
        container_name: postgres
        environment:
            POSTGRES_USER: ubuntu
            POSTGRES_PASSWORD: android
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data

    chat-1:
        <<: *chat
        container_name: chat-1
        environment:
            <<: *chat-env
            ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=mydatabase1;Username=ubuntu;Password=android;
            ConnectionStrings__Hangfire: Host=postgres;Port=5432;Database=Hangfire1;Username=ubuntu;Password=android;Pooling=true;MinPoolSize=0;MaxPoolSize=5;ConnectionLifetime=0;
            Chat__ClientId: 1
            Kafka__ConsumerGroupId: group1
        ports:
            - "7000:8080"

    chat-2:
        <<: *chat
        container_name: chat-2
        environment:
            <<: *chat-env
            ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=mydatabase2;Username=ubuntu;Password=android;
            ConnectionStrings__Hangfire: Host=postgres;Port=5432;Database=Hangfire2;Username=ubuntu;Password=android;Pooling=true;MinPoolSize=0;MaxPoolSize=5;ConnectionLifetime=0;
            Chat__ClientId: 2
            Kafka__ConsumerGroupId: group2
        ports:
            - "8000:8080"

    chat-3:
        <<: *chat
        container_name: chat-3
        environment:
            <<: *chat-env
            ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=mydatabase3;Username=ubuntu;Password=android;
            ConnectionStrings__Hangfire: Host=postgres;Port=5432;Database=Hangfire3;Username=ubuntu;Password=android;Pooling=true;MinPoolSize=0;MaxPoolSize=5;ConnectionLifetime=0;
            Chat__ClientId: 3
            Kafka__ConsumerGroupId: group3
        ports:
            - "9000:8080"

    # Redpanda Console UI
    ui:
        <<: *redpanda-console
        container_name: ui-chat

    kafka-chat-1:
        <<: *kafka
        container_name: kafka-chat-1
        environment:
            <<: *kafka-env
            KAFKA_BROKER_ID: 1
            
    kafka-chat-2:
        <<: *kafka
        container_name: kafka-chat-2
        environment:
            <<: *kafka-env
            KAFKA_BROKER_ID: 2
            
    kafka-chat-3:
        <<: *kafka
        container_name: kafka-chat-3
        environment:
            <<: *kafka-env
            KAFKA_BROKER_ID: 3

    kafka-init:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - kafka-chat-1
            - kafka-chat-2
            - kafka-chat-3
            - zookeeper
        entrypoint: [ '/bin/sh', '-c' ]
        command: |
            "
            # blocks until kafka is reachable
            kafka-topics --bootstrap-server kafka-chat-1:9092 --list
            # Create topics after Kafka is ready
            kafka-topics --create --topic chat-topic --bootstrap-server kafka-chat-1:9092 --partitions 6 --replication-factor 3 --config min.insync.replicas=2 --config retention.ms=600000
            "
            
# Zookeeper quorum
    zookeeper:
        <<: *zookeeper
        container_name: zookeeper-chat
        healthcheck:
            test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
            interval: 10s
            timeout: 5s
            retries: 5
    
volumes:
  postgres-data:
  zookeeper:
    driver: local
